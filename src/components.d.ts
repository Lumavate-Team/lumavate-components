/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


import {
  LumavateLargeNavCard as LumavateLargeNavCard
} from './components/lumavate-large-nav-card/lumavate-large-nav-card';

declare global {
  interface HTMLLumavateLargeNavCardElement extends LumavateLargeNavCard, HTMLStencilElement {
  }
  var HTMLLumavateLargeNavCardElement: {
    prototype: HTMLLumavateLargeNavCardElement;
    new (): HTMLLumavateLargeNavCardElement;
  };
  interface HTMLElementTagNameMap {
    "lumavate-large-nav-card": HTMLLumavateLargeNavCardElement;
  }
  interface ElementTagNameMap {
    "lumavate-large-nav-card": HTMLLumavateLargeNavCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lumavate-large-nav-card": JSXElements.LumavateLargeNavCardAttributes;
    }
  }
  namespace JSXElements {
    export interface LumavateLargeNavCardAttributes extends HTMLAttributes {
      Caption?: boolean;
      CaptionBackgroundColor?: string;
      CaptionText?: string;
      CaptionTextColor?: string;
      CardColor?: string;
      CardImage?: boolean;
      CardLink?: string;
      ImageScaling?: string;
      ImageSource?: string;
      
    }
  }
}


import {
  LumavateNavBarItem as LumavateNavBarItem
} from './components/lumavate-nav-bar-item/lumavate-nav-bar-item';

declare global {
  interface HTMLLumavateNavBarItemElement extends LumavateNavBarItem, HTMLStencilElement {
  }
  var HTMLLumavateNavBarItemElement: {
    prototype: HTMLLumavateNavBarItemElement;
    new (): HTMLLumavateNavBarItemElement;
  };
  interface HTMLElementTagNameMap {
    "lumavate-nav-bar-item": HTMLLumavateNavBarItemElement;
  }
  interface ElementTagNameMap {
    "lumavate-nav-bar-item": HTMLLumavateNavBarItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lumavate-nav-bar-item": JSXElements.LumavateNavBarItemAttributes;
    }
  }
  namespace JSXElements {
    export interface LumavateNavBarItemAttributes extends HTMLAttributes {
      NavBarItemColor?: string;
      NavBarItemImageLink?: string;
      NavBarItemLink?: string;
      NavBarItemText?: string;
      onNavigate?: (event: CustomEvent) => void;
    }
  }
}


import {
  LumavateNavBar as LumavateNavBar
} from './components/lumavate-nav-bar/lumavate-nav-bar';

declare global {
  interface HTMLLumavateNavBarElement extends LumavateNavBar, HTMLStencilElement {
  }
  var HTMLLumavateNavBarElement: {
    prototype: HTMLLumavateNavBarElement;
    new (): HTMLLumavateNavBarElement;
  };
  interface HTMLElementTagNameMap {
    "lumavate-nav-bar": HTMLLumavateNavBarElement;
  }
  interface ElementTagNameMap {
    "lumavate-nav-bar": HTMLLumavateNavBarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lumavate-nav-bar": JSXElements.LumavateNavBarAttributes;
    }
  }
  namespace JSXElements {
    export interface LumavateNavBarAttributes extends HTMLAttributes {
      NavBarBackgroundColor?: string;
      NavBarItemColor?: string;
      NavBarItems?: string;
      NavBarPosition?: string;
      
    }
  }
}


import {
  LumavateQuote as LumavateQuote
} from './components/lumavate-quote/lumavate-quote';

declare global {
  interface HTMLLumavateQuoteElement extends LumavateQuote, HTMLStencilElement {
  }
  var HTMLLumavateQuoteElement: {
    prototype: HTMLLumavateQuoteElement;
    new (): HTMLLumavateQuoteElement;
  };
  interface HTMLElementTagNameMap {
    "lumavate-quote": HTMLLumavateQuoteElement;
  }
  interface ElementTagNameMap {
    "lumavate-quote": HTMLLumavateQuoteElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lumavate-quote": JSXElements.LumavateQuoteAttributes;
    }
  }
  namespace JSXElements {
    export interface LumavateQuoteAttributes extends HTMLAttributes {
      CardColor?: string;
      Color?: string;
      FontSize?: number;
      QuotationMarks?: boolean;
      QuoteText?: string;
      ShowCard?: boolean;
      
    }
  }
}


import {
  LumavateSmallNavCard as LumavateSmallNavCard
} from './components/lumavate-small-nav-card/lumavate-small-nav-card';

declare global {
  interface HTMLLumavateSmallNavCardElement extends LumavateSmallNavCard, HTMLStencilElement {
  }
  var HTMLLumavateSmallNavCardElement: {
    prototype: HTMLLumavateSmallNavCardElement;
    new (): HTMLLumavateSmallNavCardElement;
  };
  interface HTMLElementTagNameMap {
    "lumavate-small-nav-card": HTMLLumavateSmallNavCardElement;
  }
  interface ElementTagNameMap {
    "lumavate-small-nav-card": HTMLLumavateSmallNavCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lumavate-small-nav-card": JSXElements.LumavateSmallNavCardAttributes;
    }
  }
  namespace JSXElements {
    export interface LumavateSmallNavCardAttributes extends HTMLAttributes {
      CardColor?: string;
      CardImage?: boolean;
      CardLink?: string;
      ImageScaling?: string;
      ImageSource?: string;
      SubTitle?: boolean;
      SubTitleText?: string;
      TitleText?: string;
      TitleTextColor?: string;
      
    }
  }
}


import {
  LumavateToolbarButton as LumavateToolbarButton
} from './components/lumavate-toolbar-button/lumavate-toolbar-button';

declare global {
  interface HTMLLumavateToolbarButtonElement extends LumavateToolbarButton, HTMLStencilElement {
  }
  var HTMLLumavateToolbarButtonElement: {
    prototype: HTMLLumavateToolbarButtonElement;
    new (): HTMLLumavateToolbarButtonElement;
  };
  interface HTMLElementTagNameMap {
    "lumavate-toolbar-button": HTMLLumavateToolbarButtonElement;
  }
  interface ElementTagNameMap {
    "lumavate-toolbar-button": HTMLLumavateToolbarButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lumavate-toolbar-button": JSXElements.LumavateToolbarButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface LumavateToolbarButtonAttributes extends HTMLAttributes {
      item?: any;
      onNavigate?: (event: CustomEvent) => void;
    }
  }
}


import {
  LumavateToolbar as LumavateToolbar
} from './components/lumavate-toolbar/lumavate-toolbar';

declare global {
  interface HTMLLumavateToolbarElement extends LumavateToolbar, HTMLStencilElement {
  }
  var HTMLLumavateToolbarElement: {
    prototype: HTMLLumavateToolbarElement;
    new (): HTMLLumavateToolbarElement;
  };
  interface HTMLElementTagNameMap {
    "lumavate-toolbar": HTMLLumavateToolbarElement;
  }
  interface ElementTagNameMap {
    "lumavate-toolbar": HTMLLumavateToolbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lumavate-toolbar": JSXElements.LumavateToolbarAttributes;
    }
  }
  namespace JSXElements {
    export interface LumavateToolbarAttributes extends HTMLAttributes {
      backgroundcolor?: string;
      items?: string;
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
